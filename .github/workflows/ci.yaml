name: "CI Pipeline"
# trigger on PR and push to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    name: "Security Scanning"
    runs-on: ubuntu-latest
    permissions:
      actions: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  deploy_staging:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    environment: staging
    needs: security_scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key

      - name: Deploy to GCP VM
        env:
          HOSTNAME: ${{ secrets.GCP_VM_EXTERNAL_IP }}
          USERNAME: ${{ secrets.GCP_VM_USERNAME }}
        run: |    
          # Create SSH config file
          cat >> ~/.ssh/config << EOF
          Host gcp-vm
            HostName $HOSTNAME
            User $USERNAME
            IdentityFile $(pwd)/private_key
            StrictHostKeyChecking no
          EOF

          # SSH into the GCP VM and run deployment commands
          ssh gcp-vm '
            cd staging/${{ vars.APP_DIR }}
            git checkout main
            git pull
            sudo docker-compose up
            sudo docker image prune -f
            docker compose exec django_gunicorn pytest
          '
          
          # Clean up sensitive files
          rm -f private_key